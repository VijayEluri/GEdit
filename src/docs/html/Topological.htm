<html>
<head>
<title>Topological Sort</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body bgcolor="#FFFFFF" text="#000000">
<p align="right"><font size="2">Main<a name="top"></a> Help Menu <a href="contents.html">Contents</a> 
  </font></p>
<p align="right"><font size="2"><a href="algorithms.htm">Algorithms</a> Index 
  </font></p>
<p><b><font size="4">Topological Sort</font></b></p>
<p><b>Necessary graph state</b>:<br>
  A topological sort is implemented on directed graphs. (Graphs can be weighted 
  or non-weighted.) </p>
<p><b>User input required</b>:<br>
  None</p>
<p><b>Description</b>:<br>
  This algorithm returns an ordered sequence of all nodes in a graph, such that 
  no node is visited until all its predecessors have been visited. This is often 
  useful to mark an ordering of tasks when one or several tasks must be accomplished 
  before others can be started. No specific starting node is required, and in 
  many graphs multiple starting points are possible. Many topological orderings 
  are possible in some graphs. It is important to note that this algorithm will 
  fail to find any topological ordering if any cycles are present in a graph.</p>
<p align="left"><font size="2"><a href="#top">back to top</a></font></p>
<p>&nbsp;</p>
</body>
</html>
